@model EventEase.Models.Event

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Event</h2>

@using (Html.BeginForm("Create", "Event", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.EventName, "Event Name")
        @Html.TextBoxFor(m => m.EventName, new { @class = "form-control", placeholder = "Enter event name" })
        @Html.ValidationMessageFor(m => m.EventName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.EventDate, "Event Date")
        @Html.TextBoxFor(m => m.EventDate, new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(m => m.EventDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, "Description")
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter event description" })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.VenueId, "Venue")
        @Html.DropDownListFor(
            m => m.VenueId,
            ViewBag.Venues != null ? new SelectList(ViewBag.Venues, "VenueId", "VenueName") : new SelectList(Enumerable.Empty<SelectListItem>()),
            "Select Venue",
            new { @class = "form-control" }
        )
        @Html.ValidationMessageFor(m => m.VenueId, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Create Event</button>
    <a href="@Url.Action("Display", "Event")" class="btn btn-secondary">Cancel</a>
}

